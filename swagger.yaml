swagger: "2.0"
info:
  description: "NODE EXPRESS MONGO"
  version: "1.0.0"
  title: "CASA "
tags:
  externalDocs:
    description: "Find out more"
    url: "#"

consumes:
  - application/json
produces:
  - application/json
schemes:
  - "http"
  - "https"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header


paths:
  
# =========================================================================Patient++++++++++++++++++++++++++++++++++++++++++++++++++++
 
  /api/task:
        post:
          tags:
            - "Task"
          summary: "add  a new task"
          operationId: "createTask"
          produces:
            - "application/json"
          security:
          - Bearer: []
          parameters:
            - in: "body"
              name: "contact"
              description: "Created contact object"
              required: true
              schema:
                $ref: "#/definitions/Task"
          responses:
            default:
              description: "successful operation"

        get:
            tags:
              - "Task"
            summary: "get all tasks"
            description: ""
            consumes:
              - "application/json"
            produces:
              - "application/json"
            security:
              - Bearer: []
            responses:
              200:
                description: "Success"
              404:
                description: "No content" 

  /api/task/{taskId}:

          put:
            tags:
              - "Task"
            summary: "Update task test conducted"
            operationId: "updateTask"
            produces:
              - "application/xml"
              - "application/json"
            security:
              - Bearer: []
            parameters:
              - name: "taskId"
                in: "path"
                description: "task id that need to be updated"
                required: true
                type: "string"
              - in: "body"
                name: "contact"
                description: "Update task object"
                required: true
                schema:
                  $ref: "#/definitions/Task"
            responses:
              400:
                description: "Invalid id supplied"
              404:
                description: "Task details not found"

          delete:
            tags:
              - "Task"
            summary: "Delete task"
            description: "This can only be done by the logged in user."
            operationId: "deleteTask"
            produces:
              - "application/json"
            security:
              - Bearer: []
            parameters:
              - name: "taskId"
                in: "path"
                description: "The task id that needs to be deleted"
                required: true
                type: "string"
            responses:
              400:
                description: "Invalid id supplied"
              404:
                description: "Task not found"

          get:
            tags:
              - "Task"
            summary: "Find task by ID"
            operationId: "getTaskById"
            produces:
              - "application/json"
            security:
              - Bearer: []
            parameters:
              - name: "taskId"
                in: "path"
                description: "ID of task to return"
                required: true
                type: "string"
                format: "string"
            responses:
              200:
                description: "successful operation"
              400:
                description: "Invalid ID supplied"
              404:
                description: "Task not found" 

  /api/weather: 
    get:
      tags:
        - "Weather"
      operationId: "getWeather"
      produces:
        - "application/json"
      parameters:
        - name: "cityname"
          in: "query"
          description: "ID of task to return"
          required: true
          type: "string"
          format: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found" 

  /api/ingredients/{id}: 
    get:
      tags:
        - "Ingredients"
      operationId: "getIngredients"
      produces:
        - "application/json"
      parameters:
        - name: "amount"
          in: "query"
          description: "ID of task to return"
          required: true
          type: "string"
          format: "string"
        - name: "unit"
          in: "query"
          description: "ID of task to return"
          required: false
          type: "string"
          format: "string"
        - name: "id"
          in: "path"
          description: "ID of task to return"
          required: true
          type: "string"
          format: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "not found"
  



    

       

  




definitions:
  # schemas:
  
  
  Task:
    type: object
    required:
      - sellingPrice
      - costPrice
      - taxRate
    properties:
      _id:
        type: string
        format: string
        readOnly: true
      taxTaken:
        type: string
        readOnly: true
      profit:
        type: string
        readOnly: true
      title:
        type: string
      sellingPrice:
        type: string
      costPrice:
        type: string
      taxRate:
        type: string
      assignedTo:
        type: string








  
  




  

 